<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DContainer</name>
    </assembly>
    <members>
        <member name="T:DContainer.ActivationException">
            <summary>
            The standard exception thrown when a ServiceLocator has an error in resolving an object.
            </summary>
        </member>
        <member name="M:DContainer.ActivationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception" /> class.
            </summary>
        </member>
        <member name="M:DContainer.ActivationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.
            </summary>
            <param name="message">
            The message that describes the error. 
             </param>
        </member>
        <member name="M:DContainer.ActivationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception. 
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. 
            </param>
        </member>
        <member name="M:DContainer.ActivationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. 
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. 
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info" /> parameter is null. 
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). 
            </exception>
        </member>
        <member name="T:DContainer.TypeExtensions">
            <summary>
            Contains various extension methods for types.
            </summary>
        </member>
        <member name="T:DContainer.IServiceLocator">
            <summary>
            The generic Service Locator interface. This interface is used
            to retrieve services (instances identified by type and optional
            name) from a container.
            </summary>
        </member>
        <member name="F:DContainer.LifetimeScope.Transient">
            <summary>
            instantiated per usage
            </summary>
        </member>
        <member name="F:DContainer.LifetimeScope.Singleton">
            <summary>
            only one instance
            </summary>
        </member>
        <member name="F:DContainer.LifetimeScope.PerContainer">
            <summary>
            instantiated per IoC container
            </summary>
        </member>
        <member name="T:DContainer.Locator">
            <summary>
            This class provides the ambient container for this application. If your
            framework defines such an ambient container, use ServiceLocator.Current
            to get it.
            </summary>
        </member>
        <member name="P:DContainer.Locator.Context">
            <summary>
            The current ambient container.
            </summary>
        </member>
        <member name="T:DContainer.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DContainer.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DContainer.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DContainer.Properties.Resources.ActivateAllExceptionMessage">
            <summary>
              Looks up a localized string similar to Activation error occured while trying to get all instances of type {0}.
            </summary>
        </member>
        <member name="P:DContainer.Properties.Resources.ActivationExceptionMessage">
            <summary>
              Looks up a localized string similar to Activation error occured while trying to get instance of type {0}, key &quot;{1}&quot;.
            </summary>
        </member>
        <member name="M:DContainer.ResolutionExtensions.InjectProperties``1(DContainer.IServiceLocator,``0)">
            <summary>
            Set any properties on <paramref name="instance"/> that can be
                        resolved in the context.
            
            </summary>
            <typeparam name="TService">Type of instance. Used only to provide method chaining.</typeparam><param name="locator">The context from which to resolve the service.</param><param name="instance">The instance to inject properties into.</param>
            <returns>
            <paramref name="instance"/>.
            </returns>
        </member>
        <member name="M:DContainer.ResolutionExtensions.InjectUnsetProperties``1(DContainer.IServiceLocator,``0)">
            <summary>
            Set any null-valued properties on <paramref name="instance"/> that can be
                        resolved by the container.
            
            </summary>
            <typeparam name="TService">Type of instance. Used only to provide method chaining.</typeparam><param name="context">The context from which to resolve the service.</param>
            <param name="locator"></param>
            <param name="instance">The instance to inject properties into.</param>
            <returns>
            <paramref name="instance"/>.
            </returns>
        </member>
        <member name="T:DContainer.ServiceLocatorImplBase">
            <summary>
            This class is a helper that provides a default implementation
            for most of the methods of <see cref="T:DContainer.IServiceLocator"/>.
            </summary>
        </member>
        <member name="M:DContainer.ServiceLocatorImplBase.DoGetInstance(System.Type,System.String)">
            <summary>
            When implemented by inheriting classes, this method will do the actual work of resolving
            the requested service instance.
            </summary>
            <param name="serviceType">Type of instance requested.</param>
            <param name="key">Name of registered service you want. May be null.</param>
            <returns>The requested service instance.</returns>
        </member>
        <member name="M:DContainer.ServiceLocatorImplBase.DoGetAllInstances(System.Type)">
            <summary>
            When implemented by inheriting classes, this method will do the actual work of
            resolving all the requested service instances.
            </summary>
            <param name="serviceType">Type of service requested.</param>
            <returns>Sequence of service instance objects.</returns>
        </member>
        <member name="M:DContainer.ServiceLocatorImplBase.FormatActivationExceptionMessage(System.Exception,System.Type,System.String)">
            <summary>
            Format the exception message for use in an <see cref="T:DContainer.ActivationException"/>
            that occurs while resolving a single service.
            </summary>
            <param name="actualException">The actual exception thrown by the implementation.</param>
            <param name="serviceType">Type of service requested.</param>
            <param name="key">Name requested.</param>
            <returns>The formatted exception message string.</returns>
        </member>
        <member name="M:DContainer.ServiceLocatorImplBase.FormatActivateAllExceptionMessage(System.Exception,System.Type)">
            <summary>
            Format the exception message for use in an <see cref="T:DContainer.ActivationException"/>
            that occurs while resolving multiple service instances.
            </summary>
            <param name="actualException">The actual exception thrown by the implementation.</param>
            <param name="serviceType">Type of service requested.</param>
            <returns>The formatted exception message string.</returns>
        </member>
    </members>
</doc>
